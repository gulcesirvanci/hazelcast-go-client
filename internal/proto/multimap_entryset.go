
/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto



import (
)


/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Returns the set of key-value pairs in the multimap.The collection is NOT backed by the map, so changes to the map
 * are NOT reflected in the collection, and vice-versa
 */
//@Generated("35241b966d5589c6d28be223f12897bf")
const (
    //hex: 0x020600
    MultiMapEntrySetRequestMessageType = 132608
    //hex: 0x020601
    MultiMapEntrySetResponseMessageType = 132609
    MultiMapEntrySetRequestInitialFrameSize = PartitionIdFieldOffset + IntSizeInBytes
    MultiMapEntrySetResponseInitialFrameSize = CorrelationIdFieldOffset + IntSizeInBytes

)

func MultiMapEntrySetEncodeRequest(name string) *ClientMessage {
    clientMessage := CreateForEncode()
    clientMessage.SetRetryable( true )
    clientMessage.SetOperationName("MultiMap.EntrySet")
	initialFrame := &Frame{Content: make([]byte, MultiMapEntrySetResponseInitialFrameSize), Flags: UnfragmentedMessage}
    EncodeInt(initialFrame.Content, TypeFieldOffset, MultiMapEntrySetRequestMessageType)
    clientMessage.Add(initialFrame)

    StringCodecEncode(clientMessage, name)

    return clientMessage
}


func MultiMapEntrySetDecodeResponse(clientMessage *ClientMessage) func() (/*** The set of key-value pairs in the multimap. The returned set might be modifiable but it has no effect on the multimap.*/response []*Pair) {
    return func() (/*** The set of key-value pairs in the multimap. The returned set might be modifiable but it has no effect on the multimap.*/response []*Pair) {
        iterator := clientMessage.FrameIterator()
        //empty initial frame
        iterator.Next()
        var result []*Pair
        //begin frame, list
        iterator.Next()
        for !NextFrameIsDataStructureEndFrame(iterator) {
            i := 0
            key := DataCodecDecode(iterator)
            value := DataCodecDecode(iterator)
            result[i] = NewPair(key,value)
            i++
        }

        //end frame, list
        iterator.Next()
        response = result //2


        return
    }
}

