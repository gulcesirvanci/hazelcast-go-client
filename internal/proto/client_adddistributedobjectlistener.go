/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Adds a distributed object listener to the cluster. This listener will be notified
 * when a distributed object is created or destroyed.
 */
//@Generated("878195c65ebdba58d98f747159b63d16")
const (
    //hex: 0x000900
    ClientAddDistributedObjectListenerRequestMessageType = 2304
    //hex: 0x000901
    ClientAddDistributedObjectListenerResponseMessageType = 2305
    ClientAddDistributedObjectListenerRequestLocalOnlyFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ClientAddDistributedObjectListenerRequestInternalFieldOffset = ClientAddDistributedObjectListenerRequestLocalOnlyFieldOffset + bufutil.BooleanSizeInBytes
    ClientAddDistributedObjectListenerRequestInitialFrameSize = ClientAddDistributedObjectListenerRequestInternalFieldOffset + bufutil.BooleanSizeInBytes
    ClientAddDistributedObjectListenerResponseResponseFieldOffset = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes
    ClientAddDistributedObjectListenerResponseInitialFrameSize = ClientAddDistributedObjectListenerResponseResponseFieldOffset + bufutil.UUIDSizeInBytes
    ClientAddDistributedObjectListenerEventDistributedObjectSourceFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ClientAddDistributedObjectListenerEventDistributedObjectInitialFrameSize = ClientAddDistributedObjectListenerEventDistributedObjectSourceFieldOffset + bufutil.UUIDSizeInBytes
    //hex: 0x000902
    ClientAddDistributedObjectListenerEventDistributedObjectMessageType = 2306


)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ClientAddDistributedObjectListenerRequestParameters struct {

    /**
    * If set to true, the server adds the listener only to itself, otherwise the listener is is added for all
    * members in the cluster.
    */
localOnly bool

    /**
    * Set to true for the registration for ProxyManager initiation and set to false for user listeners.
    */
internal bool
}

func ClientAddDistributedObjectListenerEncodeRequest(localOnly bool, internal bool) *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = false
    clientMessage.SetOperationName("Client.AddDistributedObjectListener")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ClientAddDistributedObjectListenerRequestMessageType)
    bufutil.EncodeBoolean(initialFrame.Content, ClientAddDistributedObjectListenerRequestLocalOnlyFieldOffset, localOnly)
    bufutil.EncodeBoolean(initialFrame.Content, ClientAddDistributedObjectListenerRequestInternalFieldOffset, internal)
    clientMessage.Add(initialFrame)
    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ClientAddDistributedObjectListenerResponseParameters struct {
    /**
    * The registration id for the distributed object listener.
    */
response string
}



func ClientAddDistributedObjectListenerDecodeResponse(clientMessage *bufutil.ClientMessage) *ClientAddDistributedObjectListenerResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ClientAddDistributedObjectListenerResponseParameters)
    initialFrame := iterator.Next()
    response.response = bufutil.DecodeUUID(initialFrame.Content, ClientAddDistributedObjectListenerResponseResponseFieldOffset)
    return response
}


    type ClientAddDistributedObjectListenerAbstractEventItemFunc func(name string, serviceName string, eventType string, source string)

func ClientAddDistributedObjectListenerHandle(clientMessage *bufutil.ClientMessage, handleEventItem ClientAddDistributedObjectListenerAbstractEventItemFunc){
    messageType := clientMessage.GetMessageType()
    iterator := clientMessage.FrameIterator()
    if messageType == ClientAddDistributedObjectListenerEventDistributedObjectMessageType {
        initialFrame := iterator.Next()
        source := bufutil.DecodeUUID(initialFrame.Content, ClientAddDistributedObjectListenerEventDistributedObjectSourceFieldOffset)
        name := bufutil.StringCodecDecode(iterator)
        serviceName := bufutil.StringCodecDecode(iterator)
        eventType := bufutil.StringCodecDecode(iterator)
        handleEventItem(name, serviceName, eventType, source)
        return
        }
        // FINEST: Logger.getLogger(super.getClass()).finest("Unknown message type received on event handler :" + messageType)
        }

