/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto

import (
_"bytes"
"github.com/hazelcast/hazelcast-go-client/serialization"
_ "github.com/hazelcast/hazelcast-go-client"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Removes the specified element from this set if it is present (optional operation).
 * Returns true if this set contained the element (or equivalently, if this set changed as a result of the call).
 * (This set will not contain the element once the call returns.)
 */
//@Generated("fa720d85a12febd08ab94634921679ae")
const (
    //hex: 0x060500
    SetRemoveRequestMessageType = 394496
    //hex: 0x060501
    SetRemoveResponseMessageType = 394497
    SetRemoveRequestInitialFrameSize = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    SetRemoveResponseResponseFieldOffset = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes
    SetRemoveResponseInitialFrameSize = SetRemoveResponseResponseFieldOffset + bufutil.BooleanSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type SetRemoveRequestParameters struct {

    /**
    * Name of the Set
    */
name string

    /**
    * Object to be removed from this set, if present
    */
value serialization.Data
}

func SetRemoveEncodeRequest(name string, value serialization.Data) *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.IsRetryable = false
    clientMessage.SetAcquiresResource(false)
    clientMessage.SetOperationName("Set.Remove")
	initialFrame := bufutil.Frame{make([]byte, ListAddAllResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, SetRemoveRequestMessageType)
    clientMessage.Add(initialFrame)
    StringCodec.encode(clientMessage, name)
    DataCodec.encode(clientMessage, value)
    return clientMessage
}

func SetRemoveDecodeRequest(clientMessage *bufutil.ClientMessagex) *SetRemoveRequestParameters {
    iterator := clientMessage.FrameIterator()
    request := new(SetRemoveRequestParameters)
    //empty initial frame
    iterator.Next()
    request.name = StringCodec.decode(iterator)
    request.value = DataCodec.decode(iterator)
    return request
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type SetRemoveResponseParameters struct {
    /**
    * True if this set contained the specified element and it is removed successfully
    */
response bool
}

func SetRemoveEncodeResponse(response bool ) *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
	initialFrame := bufutil.Frame{make([]byte, SetRemoveResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, SetRemoveResponseMessageType)
    bufutil.EncodeBoolean(initialFrame.Content, SetRemoveResponseResponseFieldOffset, response)
    clientMessage.Add(initialFrame)

    return clientMessage
}

func SetRemoveDecodeResponse(clientMessage *bufutil.ClientMessagex) *SetRemoveResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(SetRemoveResponseParameters)
    initialFrame := iterator.Next()
    response.response = bufutil.DecodeBoolean(initialFrame.Content, SetRemoveResponseResponseFieldOffset)
    return response
}

