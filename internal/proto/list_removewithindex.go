
/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto



import (
    "github.com/hazelcast/hazelcast-go-client/serialization"
)


/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Removes the element at the specified position in this list (optional operation). Shifts any subsequent elements
 * to the left (subtracts one from their indices). Returns the element that was removed from the list.
 */
//@Generated("97d57be8ead923f1a2d98302b9bd0720")
const (
    //hex: 0x051200
    ListRemoveWithIndexRequestMessageType = 332288
    //hex: 0x051201
    ListRemoveWithIndexResponseMessageType = 332289
    ListRemoveWithIndexRequestIndexFieldOffset = PartitionIdFieldOffset + IntSizeInBytes
    ListRemoveWithIndexRequestInitialFrameSize = ListRemoveWithIndexRequestIndexFieldOffset + IntSizeInBytes
    ListRemoveWithIndexResponseInitialFrameSize = CorrelationIdFieldOffset + IntSizeInBytes

)

func ListRemoveWithIndexEncodeRequest(name string, index int32) *ClientMessage {
    clientMessage := CreateForEncode()
    clientMessage.SetRetryable( false )
    clientMessage.SetOperationName("List.RemoveWithIndex")
	initialFrame := &Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: UnfragmentedMessage}
    EncodeInt(initialFrame.Content, TypeFieldOffset, ListRemoveWithIndexRequestMessageType)
    EncodeInt(initialFrame.Content, ListRemoveWithIndexRequestIndexFieldOffset, index)
    clientMessage.Add(initialFrame)

    StringCodecEncode(clientMessage, name)

    return clientMessage
}


func ListRemoveWithIndexDecodeResponse(clientMessage *ClientMessage) func() ( /*** The element previously at the specified position*//* @Nullable */response serialization.Data) {
    return func() (/*** The element previously at the specified position*//* @Nullable */response serialization.Data) {
        iterator := clientMessage.FrameIterator()
        //empty initial frame
        iterator.Next()
        response = DecodeNullable(iterator, DataCodecDecode).(serialization.Data)
        return
    }
}

