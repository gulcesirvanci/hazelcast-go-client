/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Returns true if this map contains no entries.
 */
//@Generated("6aee970113e290bd9007203658b268c0")
const (
    //hex: 0x0E0500
    TransactionalMapIsEmptyRequestMessageType = 918784
    //hex: 0x0E0501
    TransactionalMapIsEmptyResponseMessageType = 918785
    TransactionalMapIsEmptyRequestTxnIdFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    TransactionalMapIsEmptyRequestThreadIdFieldOffset = TransactionalMapIsEmptyRequestTxnIdFieldOffset + bufutil.UUIDSizeInBytes
    TransactionalMapIsEmptyRequestInitialFrameSize = TransactionalMapIsEmptyRequestThreadIdFieldOffset + bufutil.LongSizeInBytes
    TransactionalMapIsEmptyResponseResponseFieldOffset = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes
    TransactionalMapIsEmptyResponseInitialFrameSize = TransactionalMapIsEmptyResponseResponseFieldOffset + bufutil.BooleanSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type TransactionalMapIsEmptyRequestParameters struct {

    /**
    * Name of the Transactional Map
    */
name string

    /**
    * ID of the this transaction operation
    */
txnId string

    /**
    * The id of the user thread performing the operation. It is used to guarantee that only the lock holder thread (if a lock exists on the entry) can perform the requested operation.
    */
threadId int64
}

func TransactionalMapIsEmptyEncodeRequest(name string, txnId string, threadId int64) *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = false
    clientMessage.SetOperationName("TransactionalMap.IsEmpty")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, TransactionalMapIsEmptyRequestMessageType)
    bufutil.EncodeUUID(initialFrame.Content, TransactionalMapIsEmptyRequestTxnIdFieldOffset, txnId)
    bufutil.EncodeLong(initialFrame.Content, TransactionalMapIsEmptyRequestThreadIdFieldOffset, threadId)
    clientMessage.Add(initialFrame)
    bufutil.StringCodecEncode(clientMessage, name)
    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type TransactionalMapIsEmptyResponseParameters struct {
    /**
    * <tt>true</tt> if this map contains no entries.
    */
response bool
}



func TransactionalMapIsEmptyDecodeResponse(clientMessage *bufutil.ClientMessage) *TransactionalMapIsEmptyResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(TransactionalMapIsEmptyResponseParameters)
    initialFrame := iterator.Next()
    response.response = bufutil.DecodeBoolean(initialFrame.Content, TransactionalMapIsEmptyResponseResponseFieldOffset)
    return response
}

