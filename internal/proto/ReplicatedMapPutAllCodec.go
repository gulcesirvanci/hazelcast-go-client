/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto

import (
_"bytes"
"github.com/hazelcast/hazelcast-go-client/serialization"
_ "github.com/hazelcast/hazelcast-go-client"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Copies all of the mappings from the specified map to this map (optional operation). The effect of this call is
 * equivalent to that of calling put(Object,Object) put(k, v) on this map once for each mapping from key k to value
 * v in the specified map. The behavior of this operation is undefined if the specified map is modified while the
 * operation is in progress.
 */
//@Generated("ec451fed3c60909f7a19c870dc12d482")
const (
    //hex: 0x0D0800
    ReplicatedMapPutAllRequestMessageType = 854016
    //hex: 0x0D0801
    ReplicatedMapPutAllResponseMessageType = 854017
    ReplicatedMapPutAllRequestInitialFrameSize = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ReplicatedMapPutAllResponseInitialFrameSize = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ReplicatedMapPutAllRequestParameters struct {

    /**
    * Name of the ReplicatedMap
    */
name string

    /**
    * entries to be stored in this map
    */
entries java.util.List<[]serialization.Data, []serialization.Data>
}

func ReplicatedMapPutAllEncodeRequest(name string, entries []serialization.Data, []serialization.Data) *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.IsRetryable = false
    clientMessage.SetAcquiresResource(false)
    clientMessage.SetOperationName("ReplicatedMap.PutAll")
	initialFrame := bufutil.Frame{make([]byte, ListAddAllResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ReplicatedMapPutAllRequestMessageType)
    clientMessage.Add(initialFrame)
    StringCodec.encode(clientMessage, name)
    EntryListCodec.encode(clientMessage, entries, DataCodecEncode, DataCodecEncode)
    return clientMessage
}

func ReplicatedMapPutAllDecodeRequest(clientMessage *bufutil.ClientMessagex) *ReplicatedMapPutAllRequestParameters {
    iterator := clientMessage.FrameIterator()
    request := new(ReplicatedMapPutAllRequestParameters)
    //empty initial frame
    iterator.Next()
    request.name = StringCodec.decode(iterator)
    request.entries = EntryListCodec.decode(iterator, DataCodecDecode, DataCodecDecode)
    return request
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ReplicatedMapPutAllResponseParameters struct {
}

func ReplicatedMapPutAllEncodeResponse() *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
	initialFrame := bufutil.Frame{make([]byte, ReplicatedMapPutAllResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ReplicatedMapPutAllResponseMessageType)
    clientMessage.Add(initialFrame)

    return clientMessage
}

func ReplicatedMapPutAllDecodeResponse(clientMessage *bufutil.ClientMessagex) *ReplicatedMapPutAllResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ReplicatedMapPutAllResponseParameters)
    //empty initial frame
    iterator.Next()
    return response
}

