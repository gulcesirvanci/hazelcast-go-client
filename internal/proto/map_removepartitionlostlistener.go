/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Removes the specified map partition lost listener. If there is no such listener added before, this call does no
 * change in the cluster and returns false.
 */
//@Generated("09bd5992f571669f48adecef85523b11")
const (
    //hex: 0x011C00
    MapRemovePartitionLostListenerRequestMessageType = 72704
    //hex: 0x011C01
    MapRemovePartitionLostListenerResponseMessageType = 72705
    MapRemovePartitionLostListenerRequestRegistrationIdFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    MapRemovePartitionLostListenerRequestInitialFrameSize = MapRemovePartitionLostListenerRequestRegistrationIdFieldOffset + bufutil.UUIDSizeInBytes
    MapRemovePartitionLostListenerResponseResponseFieldOffset = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes
    MapRemovePartitionLostListenerResponseInitialFrameSize = MapRemovePartitionLostListenerResponseResponseFieldOffset + bufutil.BooleanSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type MapRemovePartitionLostListenerRequestParameters struct {

    /**
    * name of map
    */
name string

    /**
    * id of register
    */
registrationId string
}

func MapRemovePartitionLostListenerEncodeRequest(name string, registrationId string) *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = true
    clientMessage.SetOperationName("Map.RemovePartitionLostListener")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, MapRemovePartitionLostListenerRequestMessageType)
    bufutil.EncodeUUID(initialFrame.Content, MapRemovePartitionLostListenerRequestRegistrationIdFieldOffset, registrationId)
    clientMessage.Add(initialFrame)
    bufutil.StringCodecEncode(clientMessage, name)
    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type MapRemovePartitionLostListenerResponseParameters struct {
    /**
    * true if registration is removed, false otherwise.
    */
response bool
}



func MapRemovePartitionLostListenerDecodeResponse(clientMessage *bufutil.ClientMessage) *MapRemovePartitionLostListenerResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(MapRemovePartitionLostListenerResponseParameters)
    initialFrame := iterator.Next()
    response.response = bufutil.DecodeBoolean(initialFrame.Content, MapRemovePartitionLostListenerResponseResponseFieldOffset)
    return response
}

