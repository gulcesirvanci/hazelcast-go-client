/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto

import (
_"bytes"
"github.com/hazelcast/hazelcast-go-client/serialization"
_ "github.com/hazelcast/hazelcast-go-client"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted.
 * Invocation has no additional effect if already shut down.
 */
//@Generated("3d1d1f9d818042be92721f35fd89eb05")
const (
    //hex: 0x180100
    DurableExecutorShutdownRequestMessageType = 1573120
    //hex: 0x180101
    DurableExecutorShutdownResponseMessageType = 1573121
    DurableExecutorShutdownRequestInitialFrameSize = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    DurableExecutorShutdownResponseInitialFrameSize = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type DurableExecutorShutdownRequestParameters struct {

    /**
    * Name of the executor.
    */
name string
}

func DurableExecutorShutdownEncodeRequest(name string) *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.IsRetryable = false
    clientMessage.SetAcquiresResource(false)
    clientMessage.SetOperationName("DurableExecutor.Shutdown")
	initialFrame := bufutil.Frame{make([]byte, ListAddAllResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, DurableExecutorShutdownRequestMessageType)
    clientMessage.Add(initialFrame)
    StringCodec.encode(clientMessage, name)
    return clientMessage
}

func DurableExecutorShutdownDecodeRequest(clientMessage *bufutil.ClientMessagex) *DurableExecutorShutdownRequestParameters {
    iterator := clientMessage.FrameIterator()
    request := new(DurableExecutorShutdownRequestParameters)
    //empty initial frame
    iterator.Next()
    request.name = StringCodec.decode(iterator)
    return request
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type DurableExecutorShutdownResponseParameters struct {
}

func DurableExecutorShutdownEncodeResponse() *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
	initialFrame := bufutil.Frame{make([]byte, DurableExecutorShutdownResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, DurableExecutorShutdownResponseMessageType)
    clientMessage.Add(initialFrame)

    return clientMessage
}

func DurableExecutorShutdownDecodeResponse(clientMessage *bufutil.ClientMessagex) *DurableExecutorShutdownResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(DurableExecutorShutdownResponseParameters)
    //empty initial frame
    iterator.Next()
    return response
}

