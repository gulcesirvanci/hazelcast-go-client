/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto

import (
_"bytes"
"github.com/hazelcast/hazelcast-go-client/serialization"
_ "github.com/hazelcast/hazelcast-go-client"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Adds a new scheduled executor configuration to a running cluster.
 * If a scheduled executor configuration with the given {@code name} already exists, then
 * the new configuration is ignored and the existing one is preserved.
 */
//@Generated("10b1ac8f2d01bfa4e79b8f48aec04eb0")
const (
    //hex: 0x1B0A00
    DynamicConfigAddScheduledExecutorConfigRequestMessageType = 1772032
    //hex: 0x1B0A01
    DynamicConfigAddScheduledExecutorConfigResponseMessageType = 1772033
    DynamicConfigAddScheduledExecutorConfigRequestPoolSizeFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    DynamicConfigAddScheduledExecutorConfigRequestDurabilityFieldOffset = DynamicConfigAddScheduledExecutorConfigRequestPoolSizeFieldOffset + bufutil.IntSizeInBytes
    DynamicConfigAddScheduledExecutorConfigRequestCapacityFieldOffset = DynamicConfigAddScheduledExecutorConfigRequestDurabilityFieldOffset + bufutil.IntSizeInBytes
    DynamicConfigAddScheduledExecutorConfigRequestMergeBatchSizeFieldOffset = DynamicConfigAddScheduledExecutorConfigRequestCapacityFieldOffset + bufutil.IntSizeInBytes
    DynamicConfigAddScheduledExecutorConfigRequestInitialFrameSize = DynamicConfigAddScheduledExecutorConfigRequestMergeBatchSizeFieldOffset + bufutil.IntSizeInBytes
    DynamicConfigAddScheduledExecutorConfigResponseInitialFrameSize = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type DynamicConfigAddScheduledExecutorConfigRequestParameters struct {

    /**
    * name of scheduled executor
    */
name string

    /**
    * number of executor threads per member for the executor
    */
poolSize int

    /**
    * durability of the scheduled executor
    */
durability int

    /**
    * maximum number of tasks that a scheduler can have at any given point in time per partition
    */
capacity int

    /**
    * name of an existing configured split brain protection to be used to determine the minimum number of members
    * required in the cluster for the lock to remain functional. When {@code null}, split brain protection does not
    * apply to this lock configuration's operations.
    */
/* @Nullable */ splitBrainProtectionName string

    /**
    * TODO DOC
    */
mergePolicy string

    /**
    * TODO DOC
    */
mergeBatchSize int
}

func DynamicConfigAddScheduledExecutorConfigEncodeRequest(name string, poolSize int, durability int, capacity int, /* @Nullable */ splitBrainProtectionName string, mergePolicy string, mergeBatchSize int) *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.IsRetryable = false
    clientMessage.SetAcquiresResource(false)
    clientMessage.SetOperationName("DynamicConfig.AddScheduledExecutorConfig")
	initialFrame := bufutil.Frame{make([]byte, ListAddAllResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, DynamicConfigAddScheduledExecutorConfigRequestMessageType)
    bufutil.EncodeInt(initialFrame.Content, DynamicConfigAddScheduledExecutorConfigRequestPoolSizeFieldOffset, poolSize)
    bufutil.EncodeInt(initialFrame.Content, DynamicConfigAddScheduledExecutorConfigRequestDurabilityFieldOffset, durability)
    bufutil.EncodeInt(initialFrame.Content, DynamicConfigAddScheduledExecutorConfigRequestCapacityFieldOffset, capacity)
    bufutil.EncodeInt(initialFrame.Content, DynamicConfigAddScheduledExecutorConfigRequestMergeBatchSizeFieldOffset, mergeBatchSize)
    clientMessage.Add(initialFrame)
    StringCodec.encode(clientMessage, name)
    CodecUtil.encodeNullable(clientMessage, splitBrainProtectionName, StringCodecEncode)
    StringCodec.encode(clientMessage, mergePolicy)
    return clientMessage
}

func DynamicConfigAddScheduledExecutorConfigDecodeRequest(clientMessage *bufutil.ClientMessagex) *DynamicConfigAddScheduledExecutorConfigRequestParameters {
    iterator := clientMessage.FrameIterator()
    request := new(DynamicConfigAddScheduledExecutorConfigRequestParameters)
    initialFrame := iterator.Next()
    request.poolSize = bufutil.DecodeInt(initialFrame.Content, DynamicConfigAddScheduledExecutorConfigRequestPoolSizeFieldOffset)
    request.durability = bufutil.DecodeInt(initialFrame.Content, DynamicConfigAddScheduledExecutorConfigRequestDurabilityFieldOffset)
    request.capacity = bufutil.DecodeInt(initialFrame.Content, DynamicConfigAddScheduledExecutorConfigRequestCapacityFieldOffset)
    request.mergeBatchSize = bufutil.DecodeInt(initialFrame.Content, DynamicConfigAddScheduledExecutorConfigRequestMergeBatchSizeFieldOffset)
    request.name = StringCodec.decode(iterator)
    request.splitBrainProtectionName = CodecUtil.decodeNullable(iterator, StringCodecDecode) 
    request.mergePolicy = StringCodec.decode(iterator)
    return request
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type DynamicConfigAddScheduledExecutorConfigResponseParameters struct {
}

func DynamicConfigAddScheduledExecutorConfigEncodeResponse() *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
	initialFrame := bufutil.Frame{make([]byte, DynamicConfigAddScheduledExecutorConfigResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, DynamicConfigAddScheduledExecutorConfigResponseMessageType)
    clientMessage.Add(initialFrame)

    return clientMessage
}

func DynamicConfigAddScheduledExecutorConfigDecodeResponse(clientMessage *bufutil.ClientMessagex) *DynamicConfigAddScheduledExecutorConfigResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(DynamicConfigAddScheduledExecutorConfigResponseParameters)
    //empty initial frame
    iterator.Next()
    return response
}

