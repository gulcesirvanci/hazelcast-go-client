/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Adds a partition lost listener to the cluster.
 */
//@Generated("54a086320a047a3d192a3d120f2e659d")
const (
    //hex: 0x000600
    ClientAddPartitionLostListenerRequestMessageType = 1536
    //hex: 0x000601
    ClientAddPartitionLostListenerResponseMessageType = 1537
    ClientAddPartitionLostListenerRequestLocalOnlyFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ClientAddPartitionLostListenerRequestInitialFrameSize = ClientAddPartitionLostListenerRequestLocalOnlyFieldOffset + bufutil.BooleanSizeInBytes
    ClientAddPartitionLostListenerResponseResponseFieldOffset = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes
    ClientAddPartitionLostListenerResponseInitialFrameSize = ClientAddPartitionLostListenerResponseResponseFieldOffset + bufutil.UUIDSizeInBytes
    ClientAddPartitionLostListenerEventPartitionLostPartitionIdFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ClientAddPartitionLostListenerEventPartitionLostLostBackupCountFieldOffset = ClientAddPartitionLostListenerEventPartitionLostPartitionIdFieldOffset + bufutil.IntSizeInBytes
    ClientAddPartitionLostListenerEventPartitionLostSourceFieldOffset = ClientAddPartitionLostListenerEventPartitionLostLostBackupCountFieldOffset + bufutil.IntSizeInBytes
    ClientAddPartitionLostListenerEventPartitionLostInitialFrameSize = ClientAddPartitionLostListenerEventPartitionLostSourceFieldOffset + bufutil.UUIDSizeInBytes
    //hex: 0x000602
    ClientAddPartitionLostListenerEventPartitionLostMessageType = 1538


)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ClientAddPartitionLostListenerRequestParameters struct {

    /**
    * if true only node that has the partition sends the request, if false
    * sends all partition lost events.
    */
localOnly bool
}

func ClientAddPartitionLostListenerEncodeRequest(localOnly bool) *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = false
    clientMessage.SetOperationName("Client.AddPartitionLostListener")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ClientAddPartitionLostListenerRequestMessageType)
    bufutil.EncodeBoolean(initialFrame.Content, ClientAddPartitionLostListenerRequestLocalOnlyFieldOffset, localOnly)
    clientMessage.Add(initialFrame)
    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ClientAddPartitionLostListenerResponseParameters struct {
    /**
    * The listener registration id.
    */
response string
}



func ClientAddPartitionLostListenerDecodeResponse(clientMessage *bufutil.ClientMessage) *ClientAddPartitionLostListenerResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ClientAddPartitionLostListenerResponseParameters)
    initialFrame := iterator.Next()
    response.response = bufutil.DecodeUUID(initialFrame.Content, ClientAddPartitionLostListenerResponseResponseFieldOffset)
    return response
}


    type ClientAddPartitionLostListenerAbstractEventItemFunc func(partitionId int32, lostBackupCount int32, /* @Nullable */ source string)

func ClientAddPartitionLostListenerHandle(clientMessage *bufutil.ClientMessage, handleEventItem ClientAddPartitionLostListenerAbstractEventItemFunc){
    messageType := clientMessage.GetMessageType()
    iterator := clientMessage.FrameIterator()
    if messageType == ClientAddPartitionLostListenerEventPartitionLostMessageType {
        initialFrame := iterator.Next()
        partitionId := bufutil.DecodeInt(initialFrame.Content, ClientAddPartitionLostListenerEventPartitionLostPartitionIdFieldOffset)
        lostBackupCount := bufutil.DecodeInt(initialFrame.Content, ClientAddPartitionLostListenerEventPartitionLostLostBackupCountFieldOffset)
        source := bufutil.DecodeUUID(initialFrame.Content, ClientAddPartitionLostListenerEventPartitionLostSourceFieldOffset)
        handleEventItem(partitionId, lostBackupCount, source)
        return
        }
        // FINEST: Logger.getLogger(super.getClass()).finest("Unknown message type received on event handler :" + messageType)
        }

