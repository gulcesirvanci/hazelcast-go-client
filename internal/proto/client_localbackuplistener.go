/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Adds listener for backup acks
 */
//@Generated("9f52e364c4e16fdb73b77b59d5300559")
const (
    //hex: 0x000F00
    ClientLocalBackupListenerRequestMessageType = 3840
    //hex: 0x000F01
    ClientLocalBackupListenerResponseMessageType = 3841
    ClientLocalBackupListenerRequestInitialFrameSize = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ClientLocalBackupListenerResponseResponseFieldOffset = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes
    ClientLocalBackupListenerResponseInitialFrameSize = ClientLocalBackupListenerResponseResponseFieldOffset + bufutil.UUIDSizeInBytes
    ClientLocalBackupListenerEventBackupSourceInvocationCorrelationIdFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ClientLocalBackupListenerEventBackupInitialFrameSize = ClientLocalBackupListenerEventBackupSourceInvocationCorrelationIdFieldOffset + bufutil.LongSizeInBytes
    //hex: 0x000F02
    ClientLocalBackupListenerEventBackupMessageType = 3842


)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ClientLocalBackupListenerRequestParameters struct {
}

func ClientLocalBackupListenerEncodeRequest() *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = false
    clientMessage.SetOperationName("Client.LocalBackupListener")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ClientLocalBackupListenerRequestMessageType)
    clientMessage.Add(initialFrame)
    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ClientLocalBackupListenerResponseParameters struct {
    /**
    * Returns the registration id for the listener.
    */
response string
}



func ClientLocalBackupListenerDecodeResponse(clientMessage *bufutil.ClientMessage) *ClientLocalBackupListenerResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ClientLocalBackupListenerResponseParameters)
    initialFrame := iterator.Next()
    response.response = bufutil.DecodeUUID(initialFrame.Content, ClientLocalBackupListenerResponseResponseFieldOffset)
    return response
}


    type ClientLocalBackupListenerAbstractEventItemFunc func(sourceInvocationCorrelationId int64)

func ClientLocalBackupListenerHandle(clientMessage *bufutil.ClientMessage, handleEventItem ClientLocalBackupListenerAbstractEventItemFunc){
    messageType := clientMessage.GetMessageType()
    iterator := clientMessage.FrameIterator()
    if messageType == ClientLocalBackupListenerEventBackupMessageType {
        initialFrame := iterator.Next()
        sourceInvocationCorrelationId := bufutil.DecodeLong(initialFrame.Content, ClientLocalBackupListenerEventBackupSourceInvocationCorrelationIdFieldOffset)
        handleEventItem(sourceInvocationCorrelationId)
        return
        }
        // FINEST: Logger.getLogger(super.getClass()).finest("Unknown message type received on event handler :" + messageType)
        }

