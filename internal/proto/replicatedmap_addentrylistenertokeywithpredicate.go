/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
    "github.com/hazelcast/hazelcast-go-client/serialization"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Adds an continuous entry listener for this map. The listener will be notified for map add/remove/update/evict
 * events filtered by the given predicate.
 */
//@Generated("e530918e29979c18eec62f9a820d1dac")
const (
    //hex: 0x0D0A00
    ReplicatedMapAddEntryListenerToKeyWithPredicateRequestMessageType = 854528
    //hex: 0x0D0A01
    ReplicatedMapAddEntryListenerToKeyWithPredicateResponseMessageType = 854529
    ReplicatedMapAddEntryListenerToKeyWithPredicateRequestLocalOnlyFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ReplicatedMapAddEntryListenerToKeyWithPredicateRequestInitialFrameSize = ReplicatedMapAddEntryListenerToKeyWithPredicateRequestLocalOnlyFieldOffset + bufutil.BooleanSizeInBytes
    ReplicatedMapAddEntryListenerToKeyWithPredicateResponseResponseFieldOffset = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes
    ReplicatedMapAddEntryListenerToKeyWithPredicateResponseInitialFrameSize = ReplicatedMapAddEntryListenerToKeyWithPredicateResponseResponseFieldOffset + bufutil.UUIDSizeInBytes
    ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryEventTypeFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryUuidFieldOffset = ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryEventTypeFieldOffset + bufutil.IntSizeInBytes
    ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryNumberOfAffectedEntriesFieldOffset = ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryUuidFieldOffset + bufutil.UUIDSizeInBytes
    ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryInitialFrameSize = ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryNumberOfAffectedEntriesFieldOffset + bufutil.IntSizeInBytes
    //hex: 0x0D0A02
    ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryMessageType = 854530


)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ReplicatedMapAddEntryListenerToKeyWithPredicateRequestParameters struct {

    /**
    * Name of the Replicated Map
    */
name string

    /**
    * Key with which the specified value is to be associated.
    */
key serialization.Data

    /**
    * The predicate for filtering entries
    */
predicate serialization.Data

    /**
    * if true fires events that originated from this node only, otherwise fires all events
    */
localOnly bool
}

func ReplicatedMapAddEntryListenerToKeyWithPredicateEncodeRequest(name string, key serialization.Data, predicate serialization.Data, localOnly bool) *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = false
    clientMessage.SetOperationName("ReplicatedMap.AddEntryListenerToKeyWithPredicate")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ReplicatedMapAddEntryListenerToKeyWithPredicateRequestMessageType)
    bufutil.EncodeBoolean(initialFrame.Content, ReplicatedMapAddEntryListenerToKeyWithPredicateRequestLocalOnlyFieldOffset, localOnly)
    clientMessage.Add(initialFrame)
    bufutil.StringCodecEncode(clientMessage, name)
    bufutil.DataCodecEncode(clientMessage, key)
    bufutil.DataCodecEncode(clientMessage, predicate)
    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ReplicatedMapAddEntryListenerToKeyWithPredicateResponseParameters struct {
    /**
    * A unique string  which is used as a key to remove the listener.
    */
response string
}



func ReplicatedMapAddEntryListenerToKeyWithPredicateDecodeResponse(clientMessage *bufutil.ClientMessage) *ReplicatedMapAddEntryListenerToKeyWithPredicateResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ReplicatedMapAddEntryListenerToKeyWithPredicateResponseParameters)
    initialFrame := iterator.Next()
    response.response = bufutil.DecodeUUID(initialFrame.Content, ReplicatedMapAddEntryListenerToKeyWithPredicateResponseResponseFieldOffset)
    return response
}


    type ReplicatedMapAddEntryListenerToKeyWithPredicateAbstractEventItemFunc func(/* @Nullable */ key serialization.Data, /* @Nullable */ value serialization.Data, /* @Nullable */ oldValue serialization.Data, /* @Nullable */ mergingValue serialization.Data, eventType int32, uuid string, numberOfAffectedEntries int32)

func ReplicatedMapAddEntryListenerToKeyWithPredicateHandle(clientMessage *bufutil.ClientMessage, handleEventItem ReplicatedMapAddEntryListenerToKeyWithPredicateAbstractEventItemFunc){
    messageType := clientMessage.GetMessageType()
    iterator := clientMessage.FrameIterator()
    if messageType == ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryMessageType {
        initialFrame := iterator.Next()
        eventType := bufutil.DecodeInt(initialFrame.Content, ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryEventTypeFieldOffset)
        uuid := bufutil.DecodeUUID(initialFrame.Content, ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryUuidFieldOffset)
        numberOfAffectedEntries := bufutil.DecodeInt(initialFrame.Content, ReplicatedMapAddEntryListenerToKeyWithPredicateEventEntryNumberOfAffectedEntriesFieldOffset)
        key := bufutil.DecodeNullable(iterator, bufutil.DataCodecDecode).(serialization.Data)  
        value := bufutil.DecodeNullable(iterator, bufutil.DataCodecDecode).(serialization.Data)  
        oldValue := bufutil.DecodeNullable(iterator, bufutil.DataCodecDecode).(serialization.Data)  
        mergingValue := bufutil.DecodeNullable(iterator, bufutil.DataCodecDecode).(serialization.Data)  
        handleEventItem(key, value, oldValue, mergingValue, eventType, uuid, numberOfAffectedEntries)
        return
        }
        // FINEST: Logger.getLogger(super.getClass()).finest("Unknown message type received on event handler :" + messageType)
        }

