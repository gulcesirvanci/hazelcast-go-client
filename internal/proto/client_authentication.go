/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Makes an authentication request to the cluster.
 */
//@Generated("baba514f66b15c15aadf824476a5cb1e")
const (
    //hex: 0x000100
    ClientAuthenticationRequestMessageType = 256
    //hex: 0x000101
    ClientAuthenticationResponseMessageType = 257
    ClientAuthenticationRequestUuidFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ClientAuthenticationRequestSerializationVersionFieldOffset = ClientAuthenticationRequestUuidFieldOffset + bufutil.UUIDSizeInBytes
    ClientAuthenticationRequestInitialFrameSize = ClientAuthenticationRequestSerializationVersionFieldOffset + bufutil.ByteSizeInBytes
    ClientAuthenticationResponseStatusFieldOffset = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes
    ClientAuthenticationResponseUuidFieldOffset = ClientAuthenticationResponseStatusFieldOffset + bufutil.ByteSizeInBytes
    ClientAuthenticationResponseSerializationVersionFieldOffset = ClientAuthenticationResponseUuidFieldOffset + bufutil.UUIDSizeInBytes
    ClientAuthenticationResponsePartitionCountFieldOffset = ClientAuthenticationResponseSerializationVersionFieldOffset + bufutil.ByteSizeInBytes
    ClientAuthenticationResponseClusterIdFieldOffset = ClientAuthenticationResponsePartitionCountFieldOffset + bufutil.IntSizeInBytes
    ClientAuthenticationResponseFailoverSupportedFieldOffset = ClientAuthenticationResponseClusterIdFieldOffset + bufutil.UUIDSizeInBytes
    ClientAuthenticationResponseInitialFrameSize = ClientAuthenticationResponseFailoverSupportedFieldOffset + bufutil.BooleanSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ClientAuthenticationRequestParameters struct {

    /**
    * Cluster name that client will connect to.
    */
clusterName string

    /**
    * Name of the user for authentication.
    * Used in case Client Identity Config, otherwise it should be passed null.
    */
/* @Nullable */ username string

    /**
    * Password for the user.
    * Used in case Client Identity Config, otherwise it should be passed null.
    */
/* @Nullable */ password string

    /**
    * Unique string identifying the connected client uniquely.
    */
/* @Nullable */ uuid bufutil.Uuid

    /**
    * The type of the client. E.g. JAVA, CPP, CSHARP, etc.
    */
clientType string

    /**
    * client side supported version to inform server side
    */
serializationVersion byte

    /**
    * The Hazelcast version of the client. (e.g. 3.7.2)
    */
clientHazelcastVersion string

    /**
    * the name of the client instance
    */
clientName string

    /**
    * User defined labels of the client instance
    */
labels []string
}

func ClientAuthenticationEncodeRequest(clusterName string, /* @Nullable */ username string, /* @Nullable */ password string, /* @Nullable */ uuid bufutil.Uuid, clientType string, serializationVersion byte, clientHazelcastVersion string, clientName string, labels []string) *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = true
    clientMessage.SetOperationName("Client.Authentication")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ClientAuthenticationRequestMessageType)
    bufutil.EncodeUUID(initialFrame.Content, ClientAuthenticationRequestUuidFieldOffset, uuid)
    bufutil.EncodeByte(initialFrame.Content, ClientAuthenticationRequestSerializationVersionFieldOffset, serializationVersion)
    clientMessage.Add(initialFrame)
    bufutil.StringCodecEncode(clientMessage, clusterName)
    bufutil.EncodeNullable(clientMessage, username, bufutil.StringCodecEncode).(string)  
    bufutil.EncodeNullable(clientMessage, password, bufutil.StringCodecEncode).(string)  
    bufutil.StringCodecEncode(clientMessage, clientType)
    bufutil.StringCodecEncode(clientMessage, clientHazelcastVersion)
    bufutil.StringCodecEncode(clientMessage, clientName)
    clientMessage.Add(bufutil.BeginFrame)
        for i := 0; i < len(labels) ; i++ {
            bufutil.StringCodecEncode(clientMessage, labels[i])
        }
        clientMessage.Add(bufutil.EndFrame)


    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ClientAuthenticationResponseParameters struct {
    /**
    * A byte that represents the authentication status. It can be AUTHENTICATED(0), CREDENTIALS_FAILED(1),
    * SERIALIZATION_VERSION_MISMATCH(2) or NOT_ALLOWED_IN_CLUSTER(3).
    */
status byte
    /**
    * Address of the Hazelcast member which sends the authentication response.
    */
/* @Nullable */ address Address
    /**
    * Unique string identifying the connected client uniquely.
    */
/* @Nullable */ uuid bufutil.Uuid
    /**
    * client side supported version to inform server side
    */
serializationVersion byte
    /**
    * Version of the Hazelcast member which sends the authentication response.
    */
serverHazelcastVersion string
    /**
    * Partition count of the cluster.
    */
partitionCount int32
    /**
    * UUID of the cluster that the client authenticated.
    */
clusterId bufutil.Uuid
    /**
    * Returns true if server supports clients with failover feature.
    */
failoverSupported bool
}



func ClientAuthenticationDecodeResponse(clientMessage *bufutil.ClientMessage) *ClientAuthenticationResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ClientAuthenticationResponseParameters)
    initialFrame := iterator.Next()
    response.status = bufutil.DecodeByte(initialFrame.Content, ClientAuthenticationResponseStatusFieldOffset)
    response.uuid = bufutil.DecodeUUID(initialFrame.Content, ClientAuthenticationResponseUuidFieldOffset)
    response.serializationVersion = bufutil.DecodeByte(initialFrame.Content, ClientAuthenticationResponseSerializationVersionFieldOffset)
    response.partitionCount = bufutil.DecodeInt(initialFrame.Content, ClientAuthenticationResponsePartitionCountFieldOffset)
    response.clusterId = bufutil.DecodeUUID(initialFrame.Content, ClientAuthenticationResponseClusterIdFieldOffset)
    response.failoverSupported = bufutil.DecodeBoolean(initialFrame.Content, ClientAuthenticationResponseFailoverSupportedFieldOffset)
    response.address =          bufutil.DecodeNullable(iterator, AddressCodecDecode).(Address)  
    response.serverHazelcastVersion = //check line
         bufutil.StringCodecDecode(iterator)
    return response
}

