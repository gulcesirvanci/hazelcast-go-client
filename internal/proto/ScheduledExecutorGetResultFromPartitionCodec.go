/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto

import (
_"bytes"
"github.com/hazelcast/hazelcast-go-client/serialization"
_ "github.com/hazelcast/hazelcast-go-client"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Fetches the result of the task ({@link java.util.concurrent.Callable})
 * The call will blocking until the result is ready.
 */
//@Generated("ba0c29d108f61dfc8120d1bcf4d6815d")
const (
    //hex: 0x1A0F00
    ScheduledExecutorGetResultFromPartitionRequestMessageType = 1707776
    //hex: 0x1A0F01
    ScheduledExecutorGetResultFromPartitionResponseMessageType = 1707777
    ScheduledExecutorGetResultFromPartitionRequestInitialFrameSize = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ScheduledExecutorGetResultFromPartitionResponseInitialFrameSize = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ScheduledExecutorGetResultFromPartitionRequestParameters struct {

    /**
    * The name of the scheduler.
    */
schedulerName string

    /**
    * The name of the task
    */
taskName string
}

func ScheduledExecutorGetResultFromPartitionEncodeRequest(schedulerName string, taskName string) *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.IsRetryable = true
    clientMessage.SetAcquiresResource(false)
    clientMessage.SetOperationName("ScheduledExecutor.GetResultFromPartition")
	initialFrame := bufutil.Frame{make([]byte, ListAddAllResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ScheduledExecutorGetResultFromPartitionRequestMessageType)
    clientMessage.Add(initialFrame)
    StringCodec.encode(clientMessage, schedulerName)
    StringCodec.encode(clientMessage, taskName)
    return clientMessage
}

func ScheduledExecutorGetResultFromPartitionDecodeRequest(clientMessage *bufutil.ClientMessagex) *ScheduledExecutorGetResultFromPartitionRequestParameters {
    iterator := clientMessage.FrameIterator()
    request := new(ScheduledExecutorGetResultFromPartitionRequestParameters)
    //empty initial frame
    iterator.Next()
    request.schedulerName = StringCodec.decode(iterator)
    request.taskName = StringCodec.decode(iterator)
    return request
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ScheduledExecutorGetResultFromPartitionResponseParameters struct {
    /**
    * The result of the completed task, in serialized form ({
    */
/* @Nullable */ response serialization.Data
}

func ScheduledExecutorGetResultFromPartitionEncodeResponse(/* @Nullable */ response serialization.Data ) *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
	initialFrame := bufutil.Frame{make([]byte, ScheduledExecutorGetResultFromPartitionResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ScheduledExecutorGetResultFromPartitionResponseMessageType)
    clientMessage.Add(initialFrame)

    CodecUtil.encodeNullable(clientMessage, response, DataCodecEncode)
    return clientMessage
}

func ScheduledExecutorGetResultFromPartitionDecodeResponse(clientMessage *bufutil.ClientMessagex) *ScheduledExecutorGetResultFromPartitionResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ScheduledExecutorGetResultFromPartitionResponseParameters)
    //empty initial frame
    iterator.Next()
    response.response = CodecUtil.decodeNullable(iterator, DataCodecDecode) 
    return response
}

