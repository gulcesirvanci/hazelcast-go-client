/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
    "github.com/hazelcast/hazelcast-go-client/serialization"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.
 * If this map permits null values, then a return value of null does not
 * necessarily indicate that the map contains no mapping for the key; it's also possible that the map
 * explicitly maps the key to null.  The #containsKey operation may be used to distinguish these two cases.
 */
//@Generated("45c5f7b441343b81662276c2e353e06f")
const (
    //hex: 0x0D0600
    ReplicatedMapGetRequestMessageType = 853504
    //hex: 0x0D0601
    ReplicatedMapGetResponseMessageType = 853505
    ReplicatedMapGetRequestInitialFrameSize = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ReplicatedMapGetResponseInitialFrameSize = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ReplicatedMapGetRequestParameters struct {

    /**
    * Name of the ReplicatedMap
    */
name string

    /**
    * The key whose associated value is to be returned
    */
key serialization.Data
}

func ReplicatedMapGetEncodeRequest(name string, key serialization.Data) *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = true
    clientMessage.SetOperationName("ReplicatedMap.Get")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ReplicatedMapGetRequestMessageType)
    clientMessage.Add(initialFrame)
    bufutil.StringCodecEncode(clientMessage, name)
    bufutil.DataCodecEncode(clientMessage, key)
    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ReplicatedMapGetResponseParameters struct {
    /**
    * The value to which the specified key is mapped, or null if this map contains no mapping for the key
    */
/* @Nullable */ response serialization.Data
}



func ReplicatedMapGetDecodeResponse(clientMessage *bufutil.ClientMessage) *ReplicatedMapGetResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ReplicatedMapGetResponseParameters)
    //empty initial frame
    iterator.Next()
    response.response = bufutil.DecodeNullable(iterator, bufutil.DataCodecDecode).(serialization.Data)  
    return response
}

