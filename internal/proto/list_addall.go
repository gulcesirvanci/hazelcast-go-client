/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
    "github.com/hazelcast/hazelcast-go-client/serialization"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Appends all of the elements in the specified collection to the end of this list, in the order that they are
 * returned by the specified collection's iterator (optional operation).
 * The behavior of this operation is undefined if the specified collection is modified while the operation is in progress.
 * (Note that this will occur if the specified collection is this list, and it's nonempty.)
 */
//@Generated("73dbc662780f0e4e64c0e8737644dbce")
const (
    //hex: 0x050600
    ListAddAllRequestMessageType = 329216
    //hex: 0x050601
    ListAddAllResponseMessageType = 329217
    ListAddAllRequestInitialFrameSize = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ListAddAllResponseResponseFieldOffset = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes
    ListAddAllResponseInitialFrameSize = ListAddAllResponseResponseFieldOffset + bufutil.BooleanSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ListAddAllRequestParameters struct {

    /**
    * Name of the List
    */
name string

    /**
    * Collection containing elements to be added to this list
    */
valueList []serialization.Data
}

func ListAddAllEncodeRequest(name string, valueList []serialization.Data) *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = false
    clientMessage.SetOperationName("List.AddAll")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ListAddAllRequestMessageType)
    clientMessage.Add(initialFrame)
    bufutil.StringCodecEncode(clientMessage, name)
    clientMessage.Add(bufutil.BeginFrame)
        for i := 0; i < len(valueList) ; i++ {
            bufutil.DataCodecEncode(clientMessage, valueList[i])
        }
        clientMessage.Add(bufutil.EndFrame)


    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ListAddAllResponseParameters struct {
    /**
    * True if this list changed as a result of the call, false otherwise
    */
response bool
}



func ListAddAllDecodeResponse(clientMessage *bufutil.ClientMessage) *ListAddAllResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ListAddAllResponseParameters)
    initialFrame := iterator.Next()
    response.response = bufutil.DecodeBoolean(initialFrame.Content, ListAddAllResponseResponseFieldOffset)
    return response
}

