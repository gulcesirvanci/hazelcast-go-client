
/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto



import (
     "github.com/hazelcast/hazelcast-go-client/serialization"
)


/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Inserts the specified element at the specified position in this list (optional operation). Shifts the element
 * currently at that position (if any) and any subsequent elements to the right (adds one to their indices).
 */
//@Generated("cd6d5a76d77c77ee6cf7ff44132addab")
const (
    //hex: 0x051100
    ListAddWithIndexRequestMessageType = 332032
    //hex: 0x051101
    ListAddWithIndexResponseMessageType = 332033
    ListAddWithIndexRequestIndexFieldOffset = PartitionIdFieldOffset + IntSizeInBytes
    ListAddWithIndexRequestInitialFrameSize = ListAddWithIndexRequestIndexFieldOffset + IntSizeInBytes
    ListAddWithIndexResponseInitialFrameSize = CorrelationIdFieldOffset + IntSizeInBytes

)

func ListAddWithIndexEncodeRequest(name string, index int32, value serialization.Data) *ClientMessage {
    clientMessage := CreateForEncode()
    clientMessage.SetRetryable( false )
    clientMessage.SetOperationName("List.AddWithIndex")
	initialFrame := &Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: UnfragmentedMessage}
    EncodeInt(initialFrame.Content, TypeFieldOffset, ListAddWithIndexRequestMessageType)
    EncodeInt(initialFrame.Content, ListAddWithIndexRequestIndexFieldOffset, index)
    clientMessage.Add(initialFrame)

    StringCodecEncode(clientMessage, name)


    DataCodecEncode(clientMessage, value)

    return clientMessage
}


func ListAddWithIndexDecodeResponse(clientMessage *ClientMessage) func() () {
    return func() () {
        iterator := clientMessage.FrameIterator()
        //empty initial frame
        iterator.Next()
        return
    }
}

