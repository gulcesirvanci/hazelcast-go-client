/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Removes the specified item listener. If there is no such listener added before, this call does no change in the
 * cluster and returns false.
 */
//@Generated("6399c322ecc7a768886f87e010c907d8")
const (
    //hex: 0x060C00
    SetRemoveListenerRequestMessageType = 396288
    //hex: 0x060C01
    SetRemoveListenerResponseMessageType = 396289
    SetRemoveListenerRequestRegistrationIdFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    SetRemoveListenerRequestInitialFrameSize = SetRemoveListenerRequestRegistrationIdFieldOffset + bufutil.UUIDSizeInBytes
    SetRemoveListenerResponseResponseFieldOffset = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes
    SetRemoveListenerResponseInitialFrameSize = SetRemoveListenerResponseResponseFieldOffset + bufutil.BooleanSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type SetRemoveListenerRequestParameters struct {

    /**
    * Name of the Set
    */
name string

    /**
    * The id retrieved during registration.
    */
registrationId string
}

func SetRemoveListenerEncodeRequest(name string, registrationId string) *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = true
    clientMessage.SetOperationName("Set.RemoveListener")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, SetRemoveListenerRequestMessageType)
    bufutil.EncodeUUID(initialFrame.Content, SetRemoveListenerRequestRegistrationIdFieldOffset, registrationId)
    clientMessage.Add(initialFrame)
    bufutil.StringCodecEncode(clientMessage, name)
    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type SetRemoveListenerResponseParameters struct {
    /**
    * true if the listener with the provided id existed and removed, false otherwise.
    */
response bool
}



func SetRemoveListenerDecodeResponse(clientMessage *bufutil.ClientMessage) *SetRemoveListenerResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(SetRemoveListenerResponseParameters)
    initialFrame := iterator.Next()
    response.response = bufutil.DecodeBoolean(initialFrame.Content, SetRemoveListenerResponseResponseFieldOffset)
    return response
}

