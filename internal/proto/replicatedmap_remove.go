/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
    "github.com/hazelcast/hazelcast-go-client/serialization"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Removes the mapping for a key from this map if it is present (optional operation). Returns the value to which this map previously associated the key,
 * or null if the map contained no mapping for the key. If this map permits null values, then a return value of
 * null does not necessarily indicate that the map contained no mapping for the key; it's also possible that the map
 * explicitly mapped the key to null. The map will not contain a mapping for the specified key once the call returns.
 */
//@Generated("8ea98466cff9d33fabe8a699d55f3b21")
const (
    //hex: 0x0D0700
    ReplicatedMapRemoveRequestMessageType = 853760
    //hex: 0x0D0701
    ReplicatedMapRemoveResponseMessageType = 853761
    ReplicatedMapRemoveRequestInitialFrameSize = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ReplicatedMapRemoveResponseInitialFrameSize = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ReplicatedMapRemoveRequestParameters struct {

    /**
    * Name of the ReplicatedMap
    */
name string

    /**
    * Key with which the specified value is to be associated.
    */
key serialization.Data
}

func ReplicatedMapRemoveEncodeRequest(name string, key serialization.Data) *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = false
    clientMessage.SetOperationName("ReplicatedMap.Remove")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ReplicatedMapRemoveRequestMessageType)
    clientMessage.Add(initialFrame)
    bufutil.StringCodecEncode(clientMessage, name)
    bufutil.DataCodecEncode(clientMessage, key)
    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ReplicatedMapRemoveResponseParameters struct {
    /**
    * the previous value associated with <tt>key</tt>, or <tt>null</tt> if there was no mapping for <tt>key</tt>.
    */
/* @Nullable */ response serialization.Data
}



func ReplicatedMapRemoveDecodeResponse(clientMessage *bufutil.ClientMessage) *ReplicatedMapRemoveResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ReplicatedMapRemoveResponseParameters)
    //empty initial frame
    iterator.Next()
    response.response = bufutil.DecodeNullable(iterator, bufutil.DataCodecDecode).(serialization.Data)  
    return response
}

