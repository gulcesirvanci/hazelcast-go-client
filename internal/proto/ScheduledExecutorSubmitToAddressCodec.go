/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto

import (
_"bytes"
"github.com/hazelcast/hazelcast-go-client/serialization"
_ "github.com/hazelcast/hazelcast-go-client"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Submits the task to a member for execution, member is provided in the form of an address.
 */
//@Generated("f690f26a21bac49bba3004f325b8670f")
const (
    //hex: 0x1A0300
    ScheduledExecutorSubmitToAddressRequestMessageType = 1704704
    //hex: 0x1A0301
    ScheduledExecutorSubmitToAddressResponseMessageType = 1704705
    ScheduledExecutorSubmitToAddressRequestTypeFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ScheduledExecutorSubmitToAddressRequestInitialDelayInMillisFieldOffset = ScheduledExecutorSubmitToAddressRequestTypeFieldOffset + bufutil.ByteSizeInBytes
    ScheduledExecutorSubmitToAddressRequestPeriodInMillisFieldOffset = ScheduledExecutorSubmitToAddressRequestInitialDelayInMillisFieldOffset + bufutil.LongSizeInBytes
    ScheduledExecutorSubmitToAddressRequestInitialFrameSize = ScheduledExecutorSubmitToAddressRequestPeriodInMillisFieldOffset + bufutil.LongSizeInBytes
    ScheduledExecutorSubmitToAddressResponseInitialFrameSize = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ScheduledExecutorSubmitToAddressRequestParameters struct {

    /**
    * The name of the scheduler.
    */
schedulerName string

    /**
    * The address of the member where the task will get scheduled.
    */
address Address

    /**
    * type of schedule logic, values 0 for SINGLE_RUN, 1 for AT_FIXED_RATE
    */
type byte

    /**
    * The name of the task
    */
taskName string

    /**
    * Name The name of the task
    */
task serialization.Data

    /**
    * initial delay in milliseconds
    */
initialDelayInMillis int64

    /**
    * period between each run in milliseconds
    */
periodInMillis int64
}

func ScheduledExecutorSubmitToAddressEncodeRequest(schedulerName string, address Address, type byte, taskName string, task serialization.Data, initialDelayInMillis int64, periodInMillis int64) *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.IsRetryable = true
    clientMessage.SetAcquiresResource(false)
    clientMessage.SetOperationName("ScheduledExecutor.SubmitToAddress")
	initialFrame := bufutil.Frame{make([]byte, ListAddAllResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ScheduledExecutorSubmitToAddressRequestMessageType)
    bufutil.EncodeByte(initialFrame.Content, ScheduledExecutorSubmitToAddressRequestTypeFieldOffset, type)
    bufutil.EncodeLong(initialFrame.Content, ScheduledExecutorSubmitToAddressRequestInitialDelayInMillisFieldOffset, initialDelayInMillis)
    bufutil.EncodeLong(initialFrame.Content, ScheduledExecutorSubmitToAddressRequestPeriodInMillisFieldOffset, periodInMillis)
    clientMessage.Add(initialFrame)
    StringCodec.encode(clientMessage, schedulerName)
    AddressCodec.encode(clientMessage, address)
    StringCodec.encode(clientMessage, taskName)
    DataCodec.encode(clientMessage, task)
    return clientMessage
}

func ScheduledExecutorSubmitToAddressDecodeRequest(clientMessage *bufutil.ClientMessagex) *ScheduledExecutorSubmitToAddressRequestParameters {
    iterator := clientMessage.FrameIterator()
    request := new(ScheduledExecutorSubmitToAddressRequestParameters)
    initialFrame := iterator.Next()
    request.type = bufutil.DecodeByte(initialFrame.Content, ScheduledExecutorSubmitToAddressRequestTypeFieldOffset)
    request.initialDelayInMillis = bufutil.DecodeLong(initialFrame.Content, ScheduledExecutorSubmitToAddressRequestInitialDelayInMillisFieldOffset)
    request.periodInMillis = bufutil.DecodeLong(initialFrame.Content, ScheduledExecutorSubmitToAddressRequestPeriodInMillisFieldOffset)
    request.schedulerName = StringCodec.decode(iterator)
    request.address = AddressCodec.decode(iterator)
    request.taskName = StringCodec.decode(iterator)
    request.task = DataCodec.decode(iterator)
    return request
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ScheduledExecutorSubmitToAddressResponseParameters struct {
}

func ScheduledExecutorSubmitToAddressEncodeResponse() *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
	initialFrame := bufutil.Frame{make([]byte, ScheduledExecutorSubmitToAddressResponseInitialFrameSize), bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ScheduledExecutorSubmitToAddressResponseMessageType)
    clientMessage.Add(initialFrame)

    return clientMessage
}

func ScheduledExecutorSubmitToAddressDecodeResponse(clientMessage *bufutil.ClientMessagex) *ScheduledExecutorSubmitToAddressResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ScheduledExecutorSubmitToAddressResponseParameters)
    //empty initial frame
    iterator.Next()
    return response
}

