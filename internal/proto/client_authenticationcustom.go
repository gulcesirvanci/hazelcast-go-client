/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto

import (
_"bytes"
"github.com/hazelcast/hazelcast-go-client/serialization"
_ "github.com/hazelcast/hazelcast-go-client"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * TODO DOC
 */
//@Generated("ec6385db0d870d982b82b31429eece65")
const (
    //hex: 0x000200
    ClientAuthenticationCustomRequestMessageType = 512
    //hex: 0x000201
    ClientAuthenticationCustomResponseMessageType = 513
    ClientAuthenticationCustomRequestUuidFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    ClientAuthenticationCustomRequestSerializationVersionFieldOffset = ClientAuthenticationCustomRequestUuidFieldOffset + bufutil.UUIDSizeInBytes
    ClientAuthenticationCustomRequestPartitionCountFieldOffset = ClientAuthenticationCustomRequestSerializationVersionFieldOffset + bufutil.ByteSizeInBytes
    ClientAuthenticationCustomRequestClusterIdFieldOffset = ClientAuthenticationCustomRequestPartitionCountFieldOffset + bufutil.IntSizeInBytes
    ClientAuthenticationCustomRequestInitialFrameSize = ClientAuthenticationCustomRequestClusterIdFieldOffset + bufutil.UUIDSizeInBytes
    ClientAuthenticationCustomResponseStatusFieldOffset = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes
    ClientAuthenticationCustomResponseUuidFieldOffset = ClientAuthenticationCustomResponseStatusFieldOffset + bufutil.ByteSizeInBytes
    ClientAuthenticationCustomResponseSerializationVersionFieldOffset = ClientAuthenticationCustomResponseUuidFieldOffset + bufutil.UUIDSizeInBytes
    ClientAuthenticationCustomResponsePartitionCountFieldOffset = ClientAuthenticationCustomResponseSerializationVersionFieldOffset + bufutil.ByteSizeInBytes
    ClientAuthenticationCustomResponseClusterIdFieldOffset = ClientAuthenticationCustomResponsePartitionCountFieldOffset + bufutil.IntSizeInBytes
    ClientAuthenticationCustomResponseInitialFrameSize = ClientAuthenticationCustomResponseClusterIdFieldOffset + bufutil.UUIDSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ClientAuthenticationCustomRequestParameters struct {

    /**
    * Cluster name that client will connect to.
    */
clusterName string

    /**
    * Secret byte array for authentication.
    */
credentials serialization.Data

    /**
    * Unique string identifying the connected client uniquely.
    */
/* @Nullable */ uuid string

    /**
    * The type of the client. E.g. JAVA, CPP, CSHARP, etc.
    */
clientType string

    /**
    * client side supported version to inform server side
    */
serializationVersion byte

    /**
    * The Hazelcast version of the client. (e.g. 3.7.2)
    */
clientHazelcastVersion string

    /**
    * the name of the client instance
    */
clientName string

    /**
    * User defined labels of the client instance
    */
labels []string

    /**
    * the expected partition count of the cluster. Checked on the server side when provided.
    * Authentication fails and 3:NOT_ALLOWED_IN_CLUSTER returned, in case of mismatch
    */
partitionCount int32

    /**
    * the expected id of the cluster. Checked on the server side when provided.
    * Authentication fails and 3:NOT_ALLOWED_IN_CLUSTER returned, in case of mismatch
    */
/* @Nullable */ clusterId string
}

func ClientAuthenticationCustomEncodeRequest(clusterName string, credentials serialization.Data, /* @Nullable */ uuid string, clientType string, serializationVersion byte, clientHazelcastVersion string, clientName string, labels []string, partitionCount int32, /* @Nullable */ clusterId string) *bufutil.ClientMessagex {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = true
    clientMessage.SetAcquiresResource(false)
    clientMessage.SetOperationName("Client.AuthenticationCustom")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, ClientAuthenticationCustomRequestMessageType)
    bufutil.EncodeUUID(initialFrame.Content, ClientAuthenticationCustomRequestUuidFieldOffset, uuid)
    bufutil.EncodeByte(initialFrame.Content, ClientAuthenticationCustomRequestSerializationVersionFieldOffset, serializationVersion)
    bufutil.EncodeInt(initialFrame.Content, ClientAuthenticationCustomRequestPartitionCountFieldOffset, partitionCount)
    bufutil.EncodeUUID(initialFrame.Content, ClientAuthenticationCustomRequestClusterIdFieldOffset, clusterId)
    clientMessage.Add(initialFrame)
    bufutil.StringCodecEncode(clientMessage, clusterName)
    bufutil.DataCodecEncode(clientMessage, credentials)
    bufutil.StringCodecEncode(clientMessage, clientType)
    bufutil.StringCodecEncode(clientMessage, clientHazelcastVersion)
    bufutil.StringCodecEncode(clientMessage, clientName)
    bufutil.ListMultiFrameCodecEncode(clientMessage, labels, bufutil.StringCodecEncode)
    return clientMessage
}




/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type ClientAuthenticationCustomResponseParameters struct {
    /**
    * TODO DOC
    */
status byte
    /**
    * TODO DOC
    */
/* @Nullable */ address Address
    /**
    * Unique string identifying the connected client uniquely.
    */
/* @Nullable */ uuid string
    /**
    * client side supported version to inform server side
    */
serializationVersion byte
    /**
    * TODO DOC
    */
serverHazelcastVersion string
    /**
    * the expected partition count of the cluster. Checked on the server side when provided.
    * Authentication fails and 3:NOT_ALLOWED_IN_CLUSTER returned, in case of mismatch
    */
partitionCount int32
    /**
    * the expected id of the cluster. Checked on the server side when provided.
    * Authentication fails and 3:NOT_ALLOWED_IN_CLUSTER returned, in case of mismatch
    */
clusterId string
}



func ClientAuthenticationCustomDecodeResponse(clientMessage *bufutil.ClientMessagex) *ClientAuthenticationCustomResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(ClientAuthenticationCustomResponseParameters)
    initialFrame := iterator.Next()
    response.status = bufutil.DecodeByte(initialFrame.Content, ClientAuthenticationCustomResponseStatusFieldOffset)
    response.uuid = bufutil.DecodeUUID(initialFrame.Content, ClientAuthenticationCustomResponseUuidFieldOffset)
    response.serializationVersion = bufutil.DecodeByte(initialFrame.Content, ClientAuthenticationCustomResponseSerializationVersionFieldOffset)
    response.partitionCount = bufutil.DecodeInt(initialFrame.Content, ClientAuthenticationCustomResponsePartitionCountFieldOffset)
    response.clusterId = bufutil.DecodeUUID(initialFrame.Content, ClientAuthenticationCustomResponseClusterIdFieldOffset)
    response.address = bufutil.DecodeNullable(iterator, bufutil.AddressCodecDecode) 
    response.serverHazelcastVersion = bufutil.StringCodecDecode(iterator)
    return response
}

