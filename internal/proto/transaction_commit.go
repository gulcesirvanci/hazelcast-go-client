/*
* Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License")
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package proto


import (
    "github.com/hazelcast/hazelcast-go-client/internal/proto/bufutil"
)

/*
 * This file is auto-generated by the Hazelcast Client Protocol Code Generator.
 * To change this file, edit the templates or the protocol
 * definitions on the https://github.com/hazelcast/hazelcast-client-protocol
 * and regenerate it.
 */

/**
 * Commits the transaction with the given id.
 */
//@Generated("f63ef357ca5360a881c64dca717db6a8")
const (
    //hex: 0x150100
    TransactionCommitRequestMessageType = 1376512
    //hex: 0x150101
    TransactionCommitResponseMessageType = 1376513
    TransactionCommitRequestTransactionIdFieldOffset = bufutil.PartitionIdFieldOffset + bufutil.IntSizeInBytes
    TransactionCommitRequestThreadIdFieldOffset = TransactionCommitRequestTransactionIdFieldOffset + bufutil.UUIDSizeInBytes
    TransactionCommitRequestInitialFrameSize = TransactionCommitRequestThreadIdFieldOffset + bufutil.LongSizeInBytes
    TransactionCommitResponseInitialFrameSize = bufutil.CorrelationIdFieldOffset + bufutil.IntSizeInBytes

)

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type TransactionCommitRequestParameters struct {

    /**
    * The internal Hazelcast transaction id.
    */
transactionId string

    /**
    * The thread id for the transaction.
    */
threadId int64
}

func TransactionCommitEncodeRequest(transactionId string, threadId int64) *bufutil.ClientMessage {
    clientMessage := bufutil.CreateForEncode()
    clientMessage.Is_Retryable = false
    clientMessage.SetOperationName("Transaction.Commit")
	initialFrame := &bufutil.Frame{Content: make([]byte, ListAddAllResponseInitialFrameSize), Flags: bufutil.UnfragmentedMessage}
    bufutil.EncodeInt(initialFrame.Content, bufutil.TypeFieldOffset, TransactionCommitRequestMessageType)
    bufutil.EncodeUUID(initialFrame.Content, TransactionCommitRequestTransactionIdFieldOffset, transactionId)
    bufutil.EncodeLong(initialFrame.Content, TransactionCommitRequestThreadIdFieldOffset, threadId)
    clientMessage.Add(initialFrame)
    return clientMessage
}

/* tslint:disabled:URF-UNREAD-PUBLIC-OR-PROTECTED-FIELD */
type TransactionCommitResponseParameters struct {
}



func TransactionCommitDecodeResponse(clientMessage *bufutil.ClientMessage) *TransactionCommitResponseParameters {
    iterator := clientMessage.FrameIterator()
    response := new(TransactionCommitResponseParameters)
    //empty initial frame
    iterator.Next()
    return response
}

